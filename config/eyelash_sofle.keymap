#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        /* as: auto_shift { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     label = "AUTO_SHIFT"; */
        /*     bindings = <&kp>, <&kp>; */

        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = <135>; */
        /*     quick-tap-ms = <0>; */
        /* }; */

        /* rgb_encoder: rgb_encoder { */
        /*     compatible = "zmk,behavior-sensor-rotate"; */
        /*     label = "RGB_ENCODER"; */
        /*     #sensor-binding-cells = <0>; */
        /*     bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>; */
        /* }; */

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <100>;
        };
    };
 
    /* lr_encoder: scroll_encoder { */
    /*     compatible = "zmk,behavior-sensor-rotate"; */
    /*     #sensor-binding-cells = <0>; */
    /*     bindings = <&kp LEFT_ARROW>, <&kp RIGHT_ARROW>; */
    /*     tap-ms = <30>; */
    /* }; */

    combos {
        compatible = "zmk,combos";

        /* esc { */
        /*     bindings = <&kp ESCAPE>; */
        /*     key-positions = <13 14>; */
        /* }; */

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 18>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 21>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <30 31>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <33 34>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 5>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
        };

        /* minus { */
        /*     bindings = <&kp MINUS>; */
        /*     key-positions = <18 31>; */
        /* }; */

        under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <18 31>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <31 44>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <15 28>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <22 35>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <16 29>;
        };
		
        /* backslash { */
        /*     bindings = <&kp BACKSLASH>; */
        /*     key-positions = <31 44>; */
        /* }; */

        mouse2 {
            bindings = <&mkp RCLK>;
            key-positions = <20 33>;
        };

		mouse3 {
            bindings = <&mkp MCLK>;
            key-positions = <33 46>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base { // a base for kmonad mapping: no nav layer, no home row mods â€” they're done via kmonad
            bindings = <
//0          1               2               3             4            5             6               7             8          9          10         11          12
&kp ESC      &kp N1          &kp N2          &kp N3        &kp N4       &kp N5        &kp UP_ARROW    &kp N6        &kp N7     &kp N8     &kp N9     &kp N0      &kp RBKT
			  																	    	                 		    
//13         14              15              16            17           18            19              20            21         22         23         24          25
&kp TAB      &kp Q           &kp W           &kp E         &kp R        &kp T         &kp DOWN_ARROW  &kp Y         &kp U      &kp I      &kp O      &kp P       &kp LBKT
			  																	    	                 		    
//26         27              28              29            30           31            32              33            34         35         36         37          38
&kp CAPS     &kp A           &kp S           &kp D         &kp F        &kp G         &kp LEFT_ARROW  &kp H         &kp J      &kp K      &kp L      &kp SEMI    &kp APOS
			  																	    	                 		    
//39         40              41              42            43           44            45              46            47         48         49         50          51
&kp LSHFT    &kp Z           &kp X           &kp C         &kp V        &kp B         &kp RIGHT_ARROW &kp N         &kp M      &kp COMMA  &kp DOT    &kp FSLH    &kp RSHFT
			  																	    	                 		    
//52         53              54              55            56           57            58              59            60         61         62         63       
&to 1        &kp UP_ARROW    &kp DOWN_ARROW  &kp LALT      &kp SPACE    &ltq 3 SPACE  &kp ENTER       &ltq 2 ENTER  &kp ENTER  &kp RALT   &kp MINUS  &kp EQUAL
			  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "Base";
        };

        Solo { // autonomous layer that works on all dumb devices like android phones; home row mods and nav layer is done by zmk means
            bindings = <
&kp ESC      &kp N1       &kp N2      &kp N3       &kp N4        &kp N5       &kp UP     &kp N6        &kp N7      &kp N8       &kp N9        &kp N0          &kp RBKT
&kp TAB      &kp Q        &kp W       &kp E        &kp R         &kp T        &kp DOWN   &kp Y         &kp U       &kp I        &kp O         &kp P           &kp LBKT
&mo 2        &hm LCTRL A  &hm LALT S  &hm LSHFT D  &hm LGUI F    &kp G        &kp LEFT   &kp H         &hm LGUI J  &hm LSHFT K  &hm LALT L    &hm LCTRL SEMI  &kp APOS
&kp LSHFT    &kp Z        &kp X       &kp C        &kp V         &kp B        &kp RIGHT  &kp N         &kp M       &kp COMMA    &kp DOT       &kp FSLH        &kp RSHFT
&to 0        &kp UP       &kp DOWN    &kp LALT     &ltq 3 SPACE  &ltq 3 SPACE &kp ENTER  &ltq 2 ENTER  &kp ENTER   &kp RALT     &kp MINUS     &kp EQUAL        
			  
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
            display-name = "Solo";
        };
		
		
        Nav { // navigation
            bindings = <
&trans       &kp F1     &kp F2     &kp F3        &kp F4       &kp F5     &kp LC(UP)     &kp F6     &kp F7         &kp F8     &kp F9         &kp F10   &kp RBKT
&trans       &kp PG_UP  &kp PG_DN  &kp LC(BSPC)  &kp LC(DEL)  &kp EQUAL  &kp LC(DOWN)   &kp MINUS  &kp LC(LEFT)   &kp UP     &kp LC(RIGHT)  &kp BSLH  &kp LBKT
&trans       &kp TAB    &kp ENTER  &kp BSPC      &kp DEL      &kp ESC    &kp LC(LEFT)   &kp GRAVE  &kp LEFT       &kp DOWN   &kp RIGHT      &kp SEMI  &kp APOS
&trans       &kp LC(Z)  &kp LC(X)  &kp LC(C)     &kp LC(V)    &kp LC(B)  &kp LC(RIGHT)  &kp HOME   &kp END        &kp COMMA  &kp DOT        &kp FSLH  &kp RSHFT
&trans       &trans     &trans     &trans        &trans       &trans     &kp LC(ENTER)  &trans     &kp LC(ENTER)  &trans     &trans         &trans		  
            >;
            sensor-bindings = <&scroll_encoder>;
            display-name = "Nav";
        };

        Digits { // numpad and service bindings
            bindings = <
&bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4 &mmv MOVE_UP     &trans         &trans     &trans     &trans     &trans      &trans
&trans       &mt F4 N4          &mt F3 N3          &mt F2 N2        &mt F1 N1       &trans       &mmv MOVE_DOWN   &trans         &kp EXCL   &kp AT     &kp HASH   &kp DLLR    &trans
&trans       &mt F8 N8          &mt F7 N7          &mt F6 N6        &mt F5 N5       &trans       &mmv MOVE_LEFT   &trans         &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTRK   &trans
&trans       &mt F12 EQUAL       &mt F11 MINUS       &mt F10 N0        &mt F9 N9       &trans       &mmv MOVE_RIGHT  &trans         &kp LPAR   &kp RPAR   &kp PLUS   &kp UNDER   &trans
&to 2        &trans          &trans          &trans        &trans       &trans       &mkp LCLK        &kp LC(ENTER)  &trans     &trans     &trans     &trans
            >;
            sensor-bindings = <&scroll_encoder>;
            display-name = "Digits";
        };

/*         layer1 { // arrows */
/*             bindings = < */
/* &trans       &trans          &trans          &trans        &trans       &trans       &kp CAPS        &trans     &trans     &trans     &trans     &trans      &trans */
/* &trans       &trans          &trans          &trans        &trans       &trans       &kp LSHIFT      &trans     &trans     &trans     &trans     &trans      &trans */
/* &trans       &trans          &trans          &trans        &trans       &trans       &kp LALT        &trans     &trans     &trans     &trans     &trans      &trans */
/* &trans       &trans          &trans          &trans        &trans       &trans       &kp LCTL        &trans     &trans     &trans     &trans     &trans      &trans */
/* &to 2        &trans          &trans          &trans        &trans       &trans       &kp LGUI        &trans     &trans     &trans     &trans     &trans */
/*             >; */
/*             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>; */
/*             display-name = "arrows"; */
/*         }; */

	};
};
